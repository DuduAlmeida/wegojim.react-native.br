{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\", \"control\", \"title\", \"error\", \"secureTextEntry\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { Icon, Error, Label, FormInput, Container, InputContainer, ToggleShowPassButton } from \"./styles\";\nimport { If } from \"../If\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Input(_ref) {\n  var name = _ref.name,\n      control = _ref.control,\n      title = _ref.title,\n      error = _ref.error,\n      secureTextEntry = _ref.secureTextEntry,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      passwordHidden = _useState2[0],\n      setPasswordHidden = _useState2[1];\n\n  return _jsxs(Container, {\n    children: [_jsx(If, {\n      condition: !!title,\n      children: _jsx(Label, {\n        children: title\n      })\n    }), _jsx(If, {\n      condition: !!error,\n      children: error && _jsx(Error, {\n        children: error\n      })\n    }), _jsx(Controller, {\n      name: name,\n      control: control,\n      render: function render(_ref2) {\n        var _ref2$field = _ref2.field,\n            onChange = _ref2$field.onChange,\n            value = _ref2$field.value;\n        return _jsxs(InputContainer, {\n          children: [_jsx(FormInput, _objectSpread(_objectSpread({}, rest), {}, {\n            onChangeText: onChange,\n            value: value,\n            secureTextEntry: secureTextEntry && passwordHidden\n          })), secureTextEntry && _jsx(ToggleShowPassButton, {\n            onPress: function onPress() {\n              return setPasswordHidden(!passwordHidden);\n            },\n            children: _jsx(Icon, {\n              name: passwordHidden ? \"eye-off\" : \"eye\"\n            })\n          })]\n        });\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Controller","Icon","Error","Label","FormInput","Container","InputContainer","ToggleShowPassButton","If","Input","name","control","title","error","secureTextEntry","rest","passwordHidden","setPasswordHidden","field","onChange","value"],"sources":["C:/Users/enzor/Desktop/wegojim/src/components/Input/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { TextInputProps } from \"react-native\";\r\nimport { Control, Controller } from \"react-hook-form\";\r\n\r\nimport {\r\n  Icon,\r\n  Error,\r\n  Label,\r\n  FormInput,\r\n  Container,\r\n  InputContainer,\r\n  ToggleShowPassButton,\r\n} from \"./styles\";\r\nimport { If } from '../If';\r\n\r\ninterface Props extends TextInputProps {\r\n  control: Control;\r\n  name: string;\r\n  title?: string;\r\n  error?: string;\r\n}\r\n\r\nexport function Input({\r\n  name,\r\n  control,\r\n  title,\r\n  error,\r\n  secureTextEntry,\r\n  ...rest\r\n}: Props) {\r\n  const [passwordHidden, setPasswordHidden] = useState(true);\r\n\r\n  return (\r\n    <Container>\r\n      <If condition={!!title}>\r\n        <Label>{title}</Label>\r\n      </If>\r\n      <If condition={!!error}>{error && <Error>{error}</Error>}</If>\r\n      <Controller\r\n        name={name}\r\n        control={control}\r\n        render={({ field: { onChange, value } }) => (\r\n          <InputContainer>\r\n            <FormInput\r\n              {...rest}\r\n              onChangeText={onChange}\r\n              value={value}\r\n              secureTextEntry={secureTextEntry && passwordHidden}\r\n            />\r\n            {secureTextEntry && (\r\n              <ToggleShowPassButton\r\n                onPress={() => setPasswordHidden(!passwordHidden)}\r\n              >\r\n                <Icon name={passwordHidden ? \"eye-off\" : \"eye\"} />\r\n              </ToggleShowPassButton>\r\n            )}\r\n          </InputContainer>\r\n        )}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAAkBC,UAAlB,QAAoC,iBAApC;AAEA,SACEC,IADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,EAMEC,cANF,EAOEC,oBAPF;AASA,SAASC,EAAT;;;AASA,OAAO,SAASC,KAAT,OAOG;EAAA,IANRC,IAMQ,QANRA,IAMQ;EAAA,IALRC,OAKQ,QALRA,OAKQ;EAAA,IAJRC,KAIQ,QAJRA,KAIQ;EAAA,IAHRC,KAGQ,QAHRA,KAGQ;EAAA,IAFRC,eAEQ,QAFRA,eAEQ;EAAA,IADLC,IACK;;EACR,gBAA4ChB,QAAQ,CAAC,IAAD,CAApD;EAAA;EAAA,IAAOiB,cAAP;EAAA,IAAuBC,iBAAvB;;EAEA,OACE,MAAC,SAAD;IAAA,WACE,KAAC,EAAD;MAAI,SAAS,EAAE,CAAC,CAACL,KAAjB;MAAA,UACE,KAAC,KAAD;QAAA,UAAQA;MAAR;IADF,EADF,EAIE,KAAC,EAAD;MAAI,SAAS,EAAE,CAAC,CAACC,KAAjB;MAAA,UAAyBA,KAAK,IAAI,KAAC,KAAD;QAAA,UAAQA;MAAR;IAAlC,EAJF,EAKE,KAAC,UAAD;MACE,IAAI,EAAEH,IADR;MAEE,OAAO,EAAEC,OAFX;MAGE,MAAM,EAAE;QAAA,wBAAGO,KAAH;QAAA,IAAYC,QAAZ,eAAYA,QAAZ;QAAA,IAAsBC,KAAtB,eAAsBA,KAAtB;QAAA,OACN,MAAC,cAAD;UAAA,WACE,KAAC,SAAD,kCACML,IADN;YAEE,YAAY,EAAEI,QAFhB;YAGE,KAAK,EAAEC,KAHT;YAIE,eAAe,EAAEN,eAAe,IAAIE;UAJtC,GADF,EAOGF,eAAe,IACd,KAAC,oBAAD;YACE,OAAO,EAAE;cAAA,OAAMG,iBAAiB,CAAC,CAACD,cAAF,CAAvB;YAAA,CADX;YAAA,UAGE,KAAC,IAAD;cAAM,IAAI,EAAEA,cAAc,GAAG,SAAH,GAAe;YAAzC;UAHF,EARJ;QAAA,EADM;MAAA;IAHV,EALF;EAAA,EADF;AA6BD"},"metadata":{},"sourceType":"module"}